plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
	id 'com.matthewprenger.cursegradle' version '1.4.0'
	id "com.modrinth.minotaur" version "2.+"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url 'https://maven.nucleoid.xyz' }
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
	maven { url "https://jitpack.io" }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Libs
	modImplementation include("eu.pb4:sgui:${project.sgui_version}")
	modImplementation include("xyz.nucleoid:server-translations-api:${project.stapi_version}")
	modImplementation include("me.lucko:fabric-permissions-api:0.1-SNAPSHOT")
	modImplementation include("eu.pb4:polymer-common:${project.polymer_version}")
	modImplementation include("eu.pb4:polymer-core:${project.polymer_version}")
	modImplementation include("eu.pb4:polymer-resource-pack:${project.polymer_version}")
	modImplementation include("com.github.samolego.Config2Brigadier:config2brigadier-fabric:${project.config2brigadier_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

def ENV = System.getenv()
curseforge {
	if (ENV.CURSEFORGE_API_KEY) {
		apiKey = ENV.CURSEFORGE_API_KEY
	}

	project {
		id = "582149"
		changelog = ENV.CHANGELOG ?: "A changelog can be found at https://github.com/samolego/SimpleVillagers/releases/tag/${version}"
		releaseType = "release"
		addGameVersion "${project.minecraft_version}"
		addGameVersion "Fabric"
		addGameVersion "Quilt"

		mainArtifact(file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar")) {
			displayName = "[${project.minecraft_version}] SimpleVillagers ${version}"
		}

		afterEvaluate {
			uploadTask.dependsOn("remapJar")
		}
	}

	options {
		forgeGradleIntegration = false
	}
}

tasks.modrinth {
	onlyIf {
		ENV.MODRINTH_TOKEN
	}
}

modrinth {
	token = ENV.MODRINTH_TOKEN
	projectId = "uRSeGBg3"
	versionNumber = project.minecraft_version + "+" + version
	changelog = ENV.CHANGELOG ?: "A changelog can be found at https://github.com/samolego/Taterzens/releases/tag/${version}"
	versionName = "[${project.minecraft_version}] SimpleVillagers ${version}]"
	versionType = "release"

	uploadFile = file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar")

	gameVersions = [project.minecraft_version]
	loaders = ["fabric", "quilt"]
}
